{"version":3,"file":"static/webpack/static/development/pages/_app.js.dccc0e8b8a887575543b.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from \"next/app\";\nimport Head from \"next/head\";\nimport { NextSeo } from \"next-seo\";\nimport Navigation from \"../components/Navigation\";\nimport { createSEOConfig } from \"../utils/seo\";\nimport getPostData from \"../utils/get-post-data\";\nimport BlogEngine from \"../utils/blog-engine\";\nimport { renderLayout } from \"../utils/render-app-layout\";\nimport Footer from \"../components/Footer\";\nimport { checkForSW } from \"../utils/check-for-sw\";\nimport { FaBars } from \"react-icons/fa\";\nimport { globalStyles } from \"../styles\";\n\nexport default class MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = { navOpen: false, postData: props.postData };\n  }\n\n  static async getInitialProps({ Component, router, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    const [allData, postData] = await Promise.all([\n      BlogEngine(),\n      getPostData(router)\n    ]).catch(error =>\n      console.error(\"Error in _app.js getInitialProps()\", error)\n    );\n\n    const propsObj = Object.assign({}, { postData, allData, ...pageProps });\n\n    return { ...propsObj };\n  }\n\n  async componentDidMount() {\n    await checkForSW();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const postData = await getPostData(this.props.router);\n    if (!prevState.postData || postData.name !== this.state.postData.name) {\n      this.setState({ postData });\n    }\n  }\n\n  handleToggleNavigation = () => {\n    this.setState({\n      navOpen: !this.state.navOpen\n    });\n  };\n\n  render() {\n    const { postData } = this.state;\n\n    const seoData = createSEOConfig(postData);\n    if (postData) {\n      const tagsString = postData.tags.join(\", \");\n      return (\n        <React.Fragment>\n          {/* (1) SEO  */}\n          <Head>\n            <meta name=\"keywords\" content={tagsString} />\n          </Head>\n          <NextSeo config={seoData} />\n\n          {/* (2) navigation */}\n          <Navigation\n            open={this.state.navOpen}\n            toggleNavigation={this.handleToggleNavigation}\n          />\n          <button\n            type=\"button\"\n            role=\"button\"\n            aria-label=\"open navigation\"\n            className=\"icon-button hamburger\"\n            onClick={this.handleToggleNavigation}\n          >\n            <FaBars size={20} />\n          </button>\n\n          {/* (3) page body */}\n          <React.Fragment>\n            {renderLayout(this.props, this.state)}\n          </React.Fragment>\n\n          {/* (4) footer */}\n          <Footer />\n\n          {/* (5) global and local styles */}\n          <style global jsx>\n            {globalStyles}\n          </style>\n          <style jsx>{`\n            .icon-button {\n              margin: 15px;\n            }\n          `}</style>\n        </React.Fragment>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoCA;AACA;AADA;AAGA;AACA;AAtCA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;;;;;;;;;AAqBA;AACA;;;;;;;;;;AAEA;;;;;;;AACA;AACA;;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;AAQA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAEA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA;AACA;AACA;AACA;;;;;;;;;;AAvFA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;;AAEA;AAGA;AAAA;AACA;;;;AAJA;AAAA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;AAvBA;AACA;;;;;A","sourceRoot":""}