{"ast":null,"code":"var _jsxFileName = \"/home/wajari/dev/blog-next/pages/search.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport SearchLayout from \"../components/layouts/SearchLayout\";\nimport PostListing from \"../components/PostListing\";\nimport { NextSeo } from 'next-seo';\nexport const meta = {\n  title: \"Search post by topics | Wajari.dev\",\n  tags: [\"react\", \"next\", \"JavaScript\"],\n  layout: \"page\",\n  publishDate: \"2011-01-01\",\n  modifiedDate: false,\n  seoDescription: \"Search post for web development topics in react, next and JavaScript. We will also talk about Linux, SEO and I will tell about my learning process\"\n};\nexport default function Search(props) {\n  const renderListItems = posts => {\n    const tagTopic = props.router.query.q;\n    const items = posts.filter(post => post.tags.includes(tagTopic)).map((post, index) => __jsx(PostListing, {\n      key: index,\n      post: post,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }));\n\n    if (items.length) {\n      return items;\n    } else {\n      return __jsx(\"h2\", {\n        key: \"not-found-headline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      }, \"No results\");\n    }\n  };\n\n  const blogPosts = props.allData.filter(content => content.type == \"post\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(NextSeo, {\n    title: \"Search post by topics | Wajari.Dev\",\n    description: \"Search post for web development topics in react, next and JavaScript. We will also talk about Linux, SEO and I will tell about my learning process\",\n    canonical: \"https://wajari.dev/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(SearchLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Posts tagged: \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }\n  }, props.router.query.q)), renderListItems(blogPosts)));\n}\nSearch.defaultProps = {\n  allData: []\n};","map":{"version":3,"sources":["/home/wajari/dev/blog-next/pages/search.js"],"names":["React","SearchLayout","PostListing","NextSeo","meta","title","tags","layout","publishDate","modifiedDate","seoDescription","Search","props","renderListItems","posts","tagTopic","router","query","q","items","filter","post","includes","map","index","length","blogPosts","allData","content","type","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAO,MAAMC,IAAI,GAAG;AAChBC,EAAAA,KAAK,EAAE,oCADS;AAEhBC,EAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,YAAlB,CAFU;AAGhBC,EAAAA,MAAM,EAAE,MAHQ;AAIhBC,EAAAA,WAAW,EAAE,YAJG;AAKhBC,EAAAA,YAAY,EAAE,KALE;AAMhBC,EAAAA,cAAc,EAAE;AANA,CAAb;AASP,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,QAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,UAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBC,CAApC;AAEA,UAAMC,KAAK,GAAGL,KAAK,CACdM,MADS,CACFC,IAAI,IAAIA,IAAI,CAACf,IAAL,CAAUgB,QAAV,CAAmBP,QAAnB,CADN,EAETQ,GAFS,CAEL,CAACF,IAAD,EAAOG,KAAP,KACD,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,KAAlB;AAAyB,MAAA,IAAI,EAAEH,IAA/B;AAAqC,MAAA,KAAK,EAAEG,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHM,CAAd;;AAMA,QAAIL,KAAK,CAACM,MAAV,EAAkB;AACd,aAAON,KAAP;AACH,KAFD,MAEO;AACH,aAAO;AAAI,QAAA,GAAG,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;AACJ,GAdD;;AAeA,QAAMO,SAAS,GAAGd,KAAK,CAACe,OAAN,CAAcP,MAAd,CAAqBQ,OAAO,IAAIA,OAAO,CAACC,IAAR,IAAgB,MAAhD,CAAlB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,OAAD;AACF,IAAA,KAAK,EAAC,oCADJ;AAEF,IAAA,WAAW,EAAE,oJAFX;AAGF,IAAA,SAAS,EAAC,qBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMA,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOjB,KAAK,CAACI,MAAN,CAAaC,KAAb,CAAmBC,CAA1B,CADlB,CADJ,EAIKL,eAAe,CAACa,SAAD,CAJpB,CANA,CADJ;AAeH;AACDf,MAAM,CAACmB,YAAP,GAAsB;AAClBH,EAAAA,OAAO,EAAE;AADS,CAAtB","sourcesContent":["import React from \"react\";\nimport SearchLayout from \"../components/layouts/SearchLayout\";\nimport PostListing from \"../components/PostListing\";\nimport { NextSeo } from 'next-seo'; \n\nexport const meta = {\n    title: \"Search post by topics | Wajari.dev\",\n    tags: [\"react\", \"next\", \"JavaScript\"],\n    layout: \"page\",\n    publishDate: \"2011-01-01\",\n    modifiedDate: false,\n    seoDescription: \"Search post for web development topics in react, next and JavaScript. We will also talk about Linux, SEO and I will tell about my learning process\"\n};\n\nexport default function Search(props) {\n    const renderListItems = posts => {\n        const tagTopic = props.router.query.q;\n\n        const items = posts\n            .filter(post => post.tags.includes(tagTopic))\n            .map((post, index) => (\n                <PostListing key={index} post={post} index={index} />\n            ));\n\n        if (items.length) {\n            return items;\n        } else {\n            return <h2 key=\"not-found-headline\">No results</h2>;\n        }\n    };\n    const blogPosts = props.allData.filter(content => content.type == \"post\");\n    return (\n        <div>\n        <NextSeo\n      title=\"Search post by topics | Wajari.Dev\"\n      description= \"Search post for web development topics in react, next and JavaScript. We will also talk about Linux, SEO and I will tell about my learning process\"\n      canonical=\"https://wajari.dev/\"\n      />\n        <SearchLayout>\n            <h1>\n                Posts tagged: <span>{props.router.query.q}</span>\n            </h1>\n            {renderListItems(blogPosts)}\n        </SearchLayout>\n        </div>\n    );\n}\nSearch.defaultProps = {\n    allData: []\n};\n"]},"metadata":{},"sourceType":"module"}