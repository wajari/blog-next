{"ast":null,"code":"import BlogEngine from \"./blog-engine\";\nexport default async function (router) {\n  if (!router) return; // get the content component's file name from the router path\n\n  const splitRoute = router.route.split(\"/\");\n  let compName = splitRoute.length > 0 ? splitRoute[splitRoute.length - 1] : null; // for the root path, we want index.js file\n\n  compName = router.pathname == \"/\" ? \"index\" : compName; // get page data based on file name\n\n  let allPageData;\n\n  try {\n    allPageData = await BlogEngine();\n  } catch (error) {\n    console.log(`Error getting post and page lists: ${error}`);\n  }\n\n  const postData = allPageData.filter(component => component.name == compName);\n  return Promise.resolve(postData[0]);\n}","map":{"version":3,"sources":["/home/wajari/dev/blog-next/utils/get-post-data.js"],"names":["BlogEngine","router","splitRoute","route","split","compName","length","pathname","allPageData","error","console","log","postData","filter","component","name","Promise","resolve"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,eAAe,gBAAeC,MAAf,EAAuB;AAClC,MAAI,CAACA,MAAL,EAAa,OADqB,CAGlC;;AACA,QAAMC,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAaC,KAAb,CAAmB,GAAnB,CAAnB;AACA,MAAIC,QAAQ,GACRH,UAAU,CAACI,MAAX,GAAoB,CAApB,GAAwBJ,UAAU,CAACA,UAAU,CAACI,MAAX,GAAoB,CAArB,CAAlC,GAA4D,IADhE,CALkC,CAQlC;;AACAD,EAAAA,QAAQ,GAAGJ,MAAM,CAACM,QAAP,IAAmB,GAAnB,GAAyB,OAAzB,GAAmCF,QAA9C,CATkC,CAWlC;;AACA,MAAIG,WAAJ;;AACA,MAAI;AACAA,IAAAA,WAAW,GAAG,MAAMR,UAAU,EAA9B;AACH,GAFD,CAEE,OAAOS,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCF,KAAM,EAAxD;AACH;;AAED,QAAMG,QAAQ,GAAGJ,WAAW,CAACK,MAAZ,CACbC,SAAS,IAAIA,SAAS,CAACC,IAAV,IAAkBV,QADlB,CAAjB;AAIA,SAAOW,OAAO,CAACC,OAAR,CAAgBL,QAAQ,CAAC,CAAD,CAAxB,CAAP;AACH","sourcesContent":["import BlogEngine from \"./blog-engine\";\n\nexport default async function(router) {\n    if (!router) return;\n\n    // get the content component's file name from the router path\n    const splitRoute = router.route.split(\"/\");\n    let compName =\n        splitRoute.length > 0 ? splitRoute[splitRoute.length - 1] : null;\n\n    // for the root path, we want index.js file\n    compName = router.pathname == \"/\" ? \"index\" : compName;\n\n    // get page data based on file name\n    let allPageData;\n    try {\n        allPageData = await BlogEngine();\n    } catch (error) {\n        console.log(`Error getting post and page lists: ${error}`);\n    }\n\n    const postData = allPageData.filter(\n        component => component.name == compName\n    );\n\n    return Promise.resolve(postData[0]);\n}\n"]},"metadata":{},"sourceType":"module"}